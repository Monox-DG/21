#include <limits.h>
#include <math.h>
#include <stdio.h>
#include <stdlib.h>

#define NMAX 10

int input(int *a, int *n);
void output(int *a, int n);
int max(int *a, int n);
int min(int *a, int n);
double mean(int *a, int n);
double variance(int *a, int n);
void output_result(int max_v, int min_v, double mean_v, double variance_v);

int main() {
    int n, data[NMAX];

    if (input(data, &n) == 0) {
        printf("n/a");
        return 0;
    }

    output(data, n);
    output_result(max(data, n), min(data, n), mean(data, n), variance(data, n));

    return 0;
}

int input(int *a, int *n) {
    if (scanf("%d", n) != 1 || *n < 0) {
        printf("n/a");
        exit(1);
    }
    if (*n > NMAX) {
        *n = NMAX;
    }
    for (int p = 0; p < *n; p++) {
        if (scanf("%d", &a[p]) != 1) {
            printf("n/a");
            exit(1);
        }
    }
    return *n > 0;
}
void output(int *a, int n) {
    for (int p = 0; p < n; p++) {
        printf("%d ", a[p]);
    }
    printf("\n");
}

int max(int *a, int n) {
    int max_v = INT_MIN;
    for (int p = 0; p < n; p++) {
        if (a[p] > max_v) {
            max_v = a[p];
        }
    }
    return max_v;
}

int min(int *a, int n) {
    int min_v = INT_MAX;
    for (int p = 0; p < n; p++) {
        if (a[p] < min_v) {
            min_v = a[p];
        }
    }
    return min_v;
}

double mean(int *a, int n) {
    double sum = 0.0;
    for (int p = 0; p < n; p++) {
        sum += a[p];
    }
    return sum / n;
}

double variance(int *a, int n) {
    double mean_v = mean(a, n);
    double var_sum = 0.0;
    for (int p = 0; p < n; p++) {
        var_sum += (a[p] - mean_v) * (a[p] - mean_v);
    }
    return var_sum / n;
}

void output_result(int max_v, int min_v, double mean_v, double variance_v) {
    printf("%d ", max_v);
    printf("%d ", min_v);
    printf("%.6f ", mean_v);
    printf("%.6f ", variance_v);
}
